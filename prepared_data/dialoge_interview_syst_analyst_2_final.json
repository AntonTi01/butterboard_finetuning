{
  "dialogue": [
    {
      "start_time": "00:00:39,760",
      "end_time": "00:05:07,700",
      "speaker": "candidate",
      "text": "Меня там на всякие проекты кидали. Был в проекте логистической компании, работал там программистом, работал даже с САП. Если знаете такую технологию, она уже ушла, но когда-то была. Вот, тоже был программистом на этом САПе. И в IBM получилось немного поработать, где-то полгода проект там был с ним связан. И вот на САПе я узнал, что есть такие люди, как САП-консультанты, а они, оказывается, ещё и аналитикой, по сути, занимаются. И я решил тоже стать аналитиком после этого. Собственно, вот я поработал в логистической компании Outsource, и в России я уже приехал… работал в медтехе, в страховой, там уже работал аналитиком. А вот… Да, конечно. Да, супер. Тогда вы знаете… Позывается, они, вроде, ребрендинг сделали, вот. Я работал уже как раз-таки системным аналитиком, отвечал за пару систем. То есть, у меня был монолит, на котором проводились вообще все платежи, все вот эти ДМС оформлялись и тому подобное. Плюс его распиливали сейчас активно на микросервисы. на то, чтобы люди могли заключать, ну, типа, выбирать себе какой-то полис, который они хотят. какое-то ДМС и тому подобное. Вот. Я отвечал за фром-систему и за бэк-систему, соответственно. Как у нас вообще выглядел рабочий день? У нас двухнедельный спринт был всегда. Дейлики каждодневные, груминги, прегруминги, ретро — ну, вот вся вот эта менеджерская история присутствовала. Мой день выглядел таким образом, что, ну, если спринт начался, у меня есть какой-то пул задач в моём трекере. Пользовались мы Яндекс-трекером, ушли из жиры. Я узнаю, что у меня за задача, созваниваюсь со стейкхолдерами. Документирую какие-то моменты, аспекты задач. Ну и, собственно, вот провожу аналитику задач. Потом созвонюсь с разработчиками, даю им задачу, если она есть. Если нет, то окей. А почему не хочешь что-то другое? Ну, у нас как-то получилась после ребрендинга какая-то непонятная история с финансированием, и очень команда стала распадаться, в которой я работал. Это не нравится. То есть мне нравится работать с теми людьми, с которыми я работал. Некоторые уже ушли. Какие, может быть, сферы определённые? Ну, вот я увидел сначала, когда ты мне написала, что это финтех, меня заинтересовало. Я в финтехе не работал. Собственно, стало интересно. Открыл вакансию, а там написано «Совмещение системного аналитика и проект-менеджера». Мне показалась это тоже довольно интересная история, потому что где бы я ни работал, было всё отдельно. Был проект-менеджер и был системный аналитик, совмещенный этой Вакансий такого не было. Вот. Ну, банальная передача каких-то данных по Get и Post. Ну, собственно, ничего такого Ну, мне нравится придумывать разный функционал. Вот, например, последнее, над чем я занимался, — это функционал реинвестирования полисов ДМС, то есть… и не только страховых полисов тоже. Пришли, заплатили деньги, там, на 10 лет или на 5 лет, может быть, на год. Они хотят дальше реинвестировать те деньги, которые получили благодаря тому, что эти полисы покупали. Вот я этот функционал прорабатывал, делал его на нашем монолите, который на самом деле коробочный, но можно было на него что-то накинуть. В итоге вот накинули такую вещь. Угу. Хорошо."
    },
    {
      "start_time": "00:05:20,680",
      "end_time": "00:05:36,750",
      "speaker": "interviewer",
      "text": "Так, ну давай я начну. Тогда вопрос, ну такой, сначала общего плана. Я ведь правильно понимаю, что перед… ты работал из Израиля, потом переехал в Москву? А подскажи, а почему такое решение?"
    },
    {
      "start_time": "00:05:36,750",
      "end_time": "00:06:30,920",
      "speaker": "candidate",
      "text": "И именно в Москву, именно в Россию, из Израиля. Почему из Израиля уехал? Почему не наоборот? Я понял, я понимаю, о чём вы говорите. Это на самом деле классный вопрос, спасибо, что задали. Всё просто. Я в 2019 году уехал, я закончил «Бауманку». И поехал учиться. Ну, типа, мне было просто интересно попробовать, смогу ли я найти работу в зарубежной компании. Просто галочку. Я это сделал. В 19-м году я нашёл, а потом ковид. Я вообще не планировал уезжать. Я думал, я год поработаю и вернусь. Ковид, потом ещё события, события, и у меня не получилось вернуться, а я всегда хотел. Собственно, я не спланировал оставаться в Израиле на всю жизнь. И сейчас я бы, на самом деле, не променял Москву, там, или Петербург. Я сейчас был ещё на Дальнем Востоке зимой, ну, вот зимой, на Новом году, Новый год. И это было прекрасно, и уезжать я не собираюсь, нет. Я понял, хорошо. То есть, ты, ну, в ближайшем будущем планируешь, в целом, быть, ну,"
    },
    {
      "start_time": "00:06:30,920",
      "end_time": "00:06:34,820",
      "speaker": "interviewer",
      "text": "Как минимум в России, да? Да, да, да."
    },
    {
      "start_time": "00:06:34,900",
      "end_time": "00:06:51,240",
      "speaker": "candidate",
      "text": "А долговременного отъезда из Москвы есть, и что это такое? Нет, на самом деле нет. Ну, я люблю поездить по России, но это не то, чтобы я уезжал там на месяцы. Ну, на две недели, на неделю. Я понял, я понял, хорошо."
    },
    {
      "start_time": "00:06:51,260",
      "end_time": "00:07:29,840",
      "speaker": "interviewer",
      "text": "Слушай, такой вопрос. Вот, ну, у нас сам сервис наш построен в целом на API, то есть это серверное приложение, и мы отдаем на сторону клиентам API для того, чтобы они могли выполнять платежи. У тебя, как я понимаю, Опыт интеграции с API есть? Да, конечно. Вот. Ну, а можешь из твоей практики привести пример какого-то плохого API, когда ты интегрировалась в какую-то партнёру, и тебе прямо вот резало глаз какая-то конкретная реализация? Я могу рассказать. Это вообще жесть была, потому что у меня был внешний заказчик, неповерный, который закидывает нам для оформления полисов каких-либо."
    },
    {
      "start_time": "00:07:30,000",
      "end_time": "00:08:10,680",
      "speaker": "candidate",
      "text": "И, ну, что там была за интеграция, как вы можете себе подумать? Это был FTP-файл, который был какой-то очень кривой, там были какие-то непонятные данные, и вот эта интеграция с этими FTP-файлами, я их терпеть не могу. Вот я их очень не люблю. Есть такое ещё на проекте, когда, ну, большая текучка, люди рисуют какие-то API. А зачем они нужны? Какие-то методы, да, имеется в виду. А зачем они нужны и к чему они — непонятно. Они существуют, там есть какие-то ключи, значения. Что они делают? Ни в документации, нигде нет. Конкретного примера я, к сожалению, привести сейчас не смогу, но такое имеется, да. Приходится дополнительные задачи делать на то, чтобы избавиться от этого, ну, так скажем, цифрового мусора, можно так назвать."
    },
    {
      "start_time": "00:08:13,180",
      "end_time": "00:08:17,860",
      "speaker": "interviewer",
      "text": "Хорошо, окей. А вот можешь, ну такое тоже…"
    },
    {
      "start_time": "00:08:17,900",
      "end_time": "00:09:27,300",
      "speaker": "candidate",
      "text": "Очень часто встречающийся вопрос. Расскажи, что такое RESTful и что такое SOP. Да, конечно. RESTful — это архитектурный стиль, основанный на HTTP-методе, взаимодействии между клиентом и сервером основаны на HTTP-методе. SOP — это уже протокол, который взаимодействуя с помощью XML-формата, то есть там у нас XML-ки, а не JSON-ы, как в RESTful. Если можно, могу поподробнее про RESTful, про методы, если это необходимо. Давай, почему нет? Да. На RESTful сейчас остановимся. Ну, это RESTful я люблю, потому что я им занимался как фронт-энд-разработчик, так как и аналитик. Основные методы — это у нас get, post, put, patch и delete. Get — это у нас на получение информации от сервера, то есть получение ресурса с сервера, пост на создание ресурса на сервере. Put — пэтч-изменение. Пэтч — это частичное изменение. Put — полное изменение ресурса. Делит, удаление, соответственно. Ну, еще есть head — это получение метаданных. Еще есть options, вот. Это по методам. Если что-то конкретное, да, можете спросить. Ну это такая теория, конечно, всё."
    },
    {
      "start_time": "00:09:28,260",
      "end_time": "00:09:44,600",
      "speaker": "interviewer",
      "text": "Хорошо, вопрос. Тебе из, допустим, двух реализаций что больше нравится и почему? Ну, вот если бы ты, допустим, своё аппы проектировал, ты бы что выбрал? Всё, я понял, да. Ну, я всегда REST."
    },
    {
      "start_time": "00:09:44,840",
      "end_time": "00:10:05,620",
      "speaker": "candidate",
      "text": "люблю, потому что он более проще для меня. Я вообще не люблю XML и SUAP, но я понимаю, зачем он нужен. Он более безопасный. То есть если у нас есть какие-то такие данные, очень чувствительные, так это назовём, то я бы, конечно, SUAP использовал. Но если у нас не чувствительные данные, и мы хотим быстро что-то реализовать, я бы REST-фу выбирал. Ну, REST API какое-нибудь дело."
    },
    {
      "start_time": "00:10:06,900",
      "end_time": "00:10:17,380",
      "speaker": "interviewer",
      "text": "Хорошо. А как ты определишь Ну вот, что API, REST — по каким признакам?"
    },
    {
      "start_time": "00:10:17,820",
      "end_time": "00:10:42,380",
      "speaker": "candidate",
      "text": "У нас есть, собственно, вот эти методы, которые я перечислял. У нас есть какая-то… Ну, я могу посмотреть в нетворке, да, что мы за запрос делаем, как он выглядит. То есть мы не меняем состояние сервера, если это иденпатентный метод. То есть я тоже понимаю, что это rest в лапе. Вот. Что ещё? Не знаю даже, как ответить по-другому на этот вопрос."
    },
    {
      "start_time": "00:10:43,480",
      "end_time": "00:11:00,580",
      "speaker": "interviewer",
      "text": "Ну, смотри, одним… давай так, одним из признаков… ну, там есть ряд признаков. Одним из признаков общерестцов является то, что сервер не хранит состояние. А, ну да. Вот. Ну, вот, допустим, если мы на этом остановимся чуть поподробнее, зачем это сделано?"
    },
    {
      "start_time": "00:11:01,140",
      "end_time": "00:11:39,120",
      "speaker": "candidate",
      "text": "То есть, ну да, то есть, мы всегда обращаемся к серверу, как будто бы мы к нему не обращались, получается, каждый раз по-новому. И, во-первых, мы не нагружаем сервер какими-то данными. Например, то же самое с кэшируемостью, да, то есть, кэшируемость у нас в браузере лучше всего сделать, чтобы сервер не нагружать. Ну и здесь, наверное, мы не хотим хранить состояние никакое. И не… Таким образом, мы можем не делать какую-то проблему с данными, которые мы хотим получить с сервера. Не совсем понял. «Не делать проблем из данного». Ну, имеется в виду, что если он бы хранил состояние какое-то, то нам было бы, наверное, сложно их как-то"
    },
    {
      "start_time": "00:11:40,600",
      "end_time": "00:12:05,860",
      "speaker": "interviewer",
      "text": "получать правильными, я бы так это назвал. Если я правильно понимаю, как это всё устроено. Ну, а можешь пример какой-то привести? Ну, там, на практике, вот, какое… любое приложение с любой логикой, какое в голову придёт. Вот, ну, чем, допустим, стейтлес-сервер помогает?"
    },
    {
      "start_time": "00:12:06,760",
      "end_time": "00:12:27,600",
      "speaker": "candidate",
      "text": "Чем стейтлесс-сервер помогает? Надо подумать сейчас. Какое приложение? Наверное, если мы делаем запрос на какой-то поиск авиабилетов на каком-нибудь Aviasales, например, мы могли бы… Если сервер не хранит состояние того, что мы искали до этого, мы бы каждый раз новое что-то искали."
    },
    {
      "start_time": "00:12:37,840",
      "end_time": "00:12:53,910",
      "speaker": "interviewer",
      "text": "Вопрос, когда… Вопрос, наверное, такой. Мы сейчас поговорили, ну, там, взяли небольшую группу вопросов по системной аналитике. Скажи, пожалуйста, в плане менеджерской работы, то есть взаимодействия с командой."
    },
    {
      "start_time": "00:12:53,910",
      "end_time": "00:13:51,780",
      "speaker": "candidate",
      "text": "А ну там, есть ли опыт управления проектами, отслеживания задач, вот именно менеджерской части? Да, оно у меня есть, но даже больше не в системном анализе, а в программировании, потому что когда-то я был главным… Ну, как главным? Наверное, у меня просто было два программиста, с которыми я делал проект, а я был старше среди них. И мне нужно было следить за выполнением их задач. Ну, это, знаете, это в те годы, когда ещё собеседования проходили физически в офисе, а не онлайн. Вот. То есть, у нас не было прям какой-то доски. Я понимаю, что сейчас это, наверное, необходимо, но тогда я просто смотрел на их работу Общался уже непосредственно с заказчиком. Что нам необходимо сделать?» и уже передавал эту информацию своему коллеге. Вот. Сейчас, как системный аналитик, у меня тоже, конечно, анбординг проходили ребята. Я их вел, следил за их задачами. Если говорить про трекеры какие-то, вот, ну, в Jiris смотрел, там, когда она у нас была. Сейчас у нас Яндекс-трекер, там слежу за ними."
    },
    {
      "start_time": "00:13:52,380",
      "end_time": "00:14:10,380",
      "speaker": "interviewer",
      "text": "Ну а если мы не будем привязываться к трекеру, вот представь себе, что у тебя, допустим, есть команда. Она, ну, там, привязана к какому-то проекту, реализовывает какие-то задачи. Вот. Ты какие метрики собирал бы проектные, а какие метрики собирал бы командные?"
    },
    {
      "start_time": "00:14:10,880",
      "end_time": "00:14:55,960",
      "speaker": "candidate",
      "text": "Кстати, классный вопрос. Никогда мне такое не задавали, надо будет подумать. Из своей практики могу точно сказать, что собираются, конечно, часы рабочие, ну, которые человек потратил на какую-либо задачу, вот. Ну то есть выполнение задач, сколько занимает у нас по времени, оценка этих задач, плюс Посмотрел бы на наш ресурс, сколько у нас человек, какой у них грейд. Какие задачи они готовы брать? Это вот касаемо команды. Касаемо проекта, ну, тоже надо понять, что это за проект, какие у нас стоят задачи, какой срок нам ставят. к выполнению этих задач. И надо ещё, может быть, что-то есть. Ну, пока вот это то, что пришло в голову сейчас."
    },
    {
      "start_time": "00:14:56,320",
      "end_time": "00:15:44,640",
      "speaker": "interviewer",
      "text": "Ну, смотри, обрати внимание, что ты сейчас сказал преимущественно про проектные метрики, ну то есть оценка задачи в трудочасах, например, да. Сроки сдачи задач, отклонение, допустим, фактическое в потраченных трудочасов от того, какое планировали. То есть это всё метрики, которые относятся к проекту, отвечают на вопрос относительно, ну, там, насколько сложно делать этот проект по времени. И как мы по нему продвигаемся? А всё-таки что по командным метрикам ты бы мерил? Ну то есть командные метрики, отвечающие на вопрос, справляются люди с работой и соответствуют ли люди, ну, вот, данному направлению. Просто ты здесь упомянул такие вещи, как грейд, например, но он же не меняется со временем. То есть если у тебя есть синер-разработчик, то он, в принципе, синер, ну, на ближайший год, наверное, да?"
    },
    {
      "start_time": "00:15:45,520",
      "end_time": "00:16:25,620",
      "speaker": "candidate",
      "text": "Я с этим согласен, да. Но если Джун, он может довольно быстро вырасти, кстати, поэтому кто его знает. Но это такая… это тоже уже из разряда теории, всё, что может произойти. Какие бы командные метрики я мог бы ещё собрать по выполнению задач? Все-таки люди ведь оценивают сами задачи, да? Если это… Мы в «Стори-пойнтах» говорим или «Трудо-часах», как вы назвали, или как ты назвал, да, так проще, наверное, будет. Не знаю, не могу еще придумать, какие метрики могут быть командные сейчас. Которые я бы собирал. Кроме часов, да, которые затратил человек на выполнение той или иной задачи."
    },
    {
      "start_time": "00:16:27,380",
      "end_time": "00:17:15,800",
      "speaker": "interviewer",
      "text": "Ну хорошо, да. И давай тогда на этом пока остановимся. Просто хочу уточнить, что если, допустим, ты меряешь, ну, например, в затраченных часах, Ну, работу, например, тестировщика, PUA-специалиста. У тебя один потратил на задачу, там, условно, три часа, а второй потратил 30 часов. Но это ведь непоказательно, потому что специалист, потративший три часа, мог проверить плохо, а потративший 30 часов мог сделать очень качественное, подробное тестирование, которое нашло много багов в итоге. Ну то есть, тут такая история, она в целом изначально вопрос в некоторой степени на фантазии. Хорошо. Если говорить, опять-таки, про проектную работу, какие задачи ты не стал бы делегировать никому, и почему?"
    },
    {
      "start_time": "00:17:16,360",
      "end_time": "00:19:45,980",
      "speaker": "candidate",
      "text": "Окей, какие бы задачи мне стал делегировать? Наверное, первое — это сбор требований и общение с заказчиком. Я бы сам этим занимался. Потому что, ну, уже довольно большой опыт у меня есть, причём и на русском языке, и на иврите. Поэтому, как бы, менталитет людей тоже очень важен бывает. И у меня есть опыт и так, и с этой стороны, и с той. Вот. Наверное, если бы мы делали какой-то регресс-тест, я бы тоже при нем участвовал. То есть, я бы следил за тем, как он происходит. Потому что если мы выкатываем что-то в продакшен, Не хотелось бы, чтобы это была какая-то потом лажа, какая-то ошибка произошла. Вот, поэтому я бы за этим тоже следил. Не то чтобы я сам тестирование проводил, я бы просто участвовал при регресс-тестировании и уже потом, при выводе в нашего какого-то функционала или еще чего-то. Наверное, эти основные задачи, которые я бы Сбор требований брал бы сам, а остальные бы прямо мониторил, да. Ну, если ещё… Окей, если есть ещё какая-то серьёзная аналитическая задача, такая прямо… Ну, например, у нас не хватает ресурсов всё-таки, а нужно выполнить какую-то… Не знаю, у нас какой-то функционал. Я не буду же нагружать ещё больше? Мы тогда вообще ничего не успеем. Тогда, конечно, я бы взял на себя какие-то обязательства и задачи. Если они связаны с аналитикой. А если не связано? Ну, если это программирование, если это фронтенд, и я, может быть, смог бы помочь, я ещё его помню. А если это QA, тестирование, и оно мануальное, мы тоже можем этим сделать. То есть, я это тоже могу на себя взять. Мне, в принципе, на самом деле было бы всё равно. Мне главное, чтобы проект у нас как бы работал, и Ну, мне самому интересно было бы всё делать. Я и на этой работе, я и тестированием занимался, собственно, функционала, который мы делали, и при регрессе участвовал, и все требования собирал. Поэтому, собственно, я и это сам готов делать. А что тебя мотивирует? Не знаю, меня на самом деле, наверное, особо ничего такого и не мотивирует. Мне просто нравится делать что-то вот такое. Процесс. Да, наверное, процесс. Так, так, так."
    },
    {
      "start_time": "00:19:46,860",
      "end_time": "00:19:53,480",
      "speaker": "interviewer",
      "text": "Давай, наверное, точно какие-то вопросы задать."
    },
    {
      "start_time": "00:20:20,770",
      "end_time": "00:21:47,360",
      "speaker": "candidate",
      "text": "Ну, все значения из левой таблицы и совпадающие в правой. Правая делает наоборот. Inner join — это, по-моему, обычный join, и full join — это join, который объединяет обе таблицы. Окей. А знаешь, что такое… Да, конечно, это избавление от избыточных данных в базе данных, соответственно. То есть в каком-то определённой у нас там таблице есть ненужные данные, которые можно было бы поделить, то есть декомпозировать, например, или просто их можно было бы убрать. А что такое индекс в базе данных? Индексы нам нужны для того, чтобы быстрее искать какие-то данные с помощью селекта, вот. Они ускоряют процесс поиска."
    },
    {
      "start_time": "00:21:57,180",
      "end_time": "00:22:20,100",
      "speaker": "interviewer",
      "text": "Так, я кажется, у нас Слушай, я хотел спросить, можешь ещё Буквально пара слов рассказать про инструментарий, которым пользовался, чем работал с API, чем с базой, где смотрел логи, просто чтобы стейк твой подробнее понимать. И, наверное, перейдём, тогда, к вопросам в обратную сторону. Окей. А вообще, весь инструментарий, я так понял, которым я пользуюсь на работе, вообще любой."
    },
    {
      "start_time": "00:22:20,880",
      "end_time": "00:23:52,120",
      "speaker": "candidate",
      "text": "Ну, для базы данных это у нас… Ой, база знаний. База данных. База знаний — это у нас Confluence всегда, либо Яндекс.Вики. Был Notion, пока его тоже не блокнули. Enote — тоже умею им пользоваться. Ну, это, по сути, всё одно и то же. Ничего там нового интересного нет. Трекера — это Джира. Осана — это была вот в Израиле почему-то. Там никто Джирой-то не пользовался, все были на этой Осане. И «Янтекс-трекер». По API это Swagger, да, то есть, вся документация по API у нас в Swagger-е находится. Что ещё такого я не назвал? Я активно пользуюсь нейросетями. Вот DeepSeq вышла, тоже им пользуюсь. Зачем? Для быстрой работы. Очень часто, если у меня API со 100 значениями, я это всё ручками прописывать не хочу, не хочу тратить время. Просто, ну, можно убыстрить документацию таким образом, объяснив в нейросети, как это сделать. Вот. Что ещё такого я могу использовать? А, для построения диаграмм многие люди тоже пользуются зачем-то Draw.io до сих пор. Мне кажется, это тоже прошлый век, потому что самому эти стрелочки рисовать очень мне не нравится, очень долго. Я использую PlantUML. Плюс, если Тоже, опять-таки, не хочется время тратить. Нейросеть, юзер стори, написал какое-нибудь, как пользователи взаимодействуют или как у нас взаимодействуют методы. Скопировал то, что тебе дали, вставил в PlantUML Online, получил диаграмму. Буквально пять минут. В Draw.io я бы это рисовал минут 30-40, вот. Это мой инструментарий, в принципе."
    }
  ]
}